************** Backend using Javascript *************



***************************** Video 2 (How to deploy backend code in production) ********************************
Steps : 
        1. we have created a folder "chaideploy".

        2. we have run a command `npm init' ->
         -> This command will make a 'package.json' file.

         'init' is just a "utility" just like 'vite' , 'react'. this command will initialise an application jese hamm react and vite sai application banate the for creating our react application.
         
       

        3. created a 'index.js' file and write our own scripts (in "package.json" file).

        NOTE : we know that when we wants to run our javascript file in "node". then we write this command -> "node <filename>". so this time our file name is "index.js" SO command will be `node index.js`.

        ABB hame baar baar ye command na likhna pde islie hamne ekk script add kri hai ("package.json" file mai) i.e -> `start": "node index.js`

        abb hamm directly ye command likh skte hai -> "npm run start". iss command sai bhi chalega too "node index.js" hee but iss baar hame node wala command likhne ki jrurat nhi pdi

        4. run a command -> 'npm install express' (in our `chaideploy` folder). -> this command will add dependency of express in our 'package.json' file.

        5. copy and paste the "Hello World" ka code (wala code from `Getting Started` section from express.js official site) in our "index.js" file.  ABB jo bhi iss file mai likha hai wo smj mai aa jaaega & iss file mai hamne Notes bhi add krdiye hai

        6. We have run a command `npm install dotenv` and created '.env' (environment variable file in our 'root' folder) file => Read the documentation from "dotenv" website and follow the steps jo usme bataye hai

        Why we use Need this '.env' file and Why we have installed it? -> Its because maanlo hamare iss backend ke code ko koi or user use krr rha hai and hamari file mai jo 'Port Number' hamne likha hai vhi aage gaya hoga abb Problem yeh hai ki jo Port Number hamare backend file mai likha hua hai ussi Port Number par uss user ka koi or kaam chal rha hai too ESEE situation ko handle krne ke liye we use `Environment Variables`. abb JAB bhi hamm hamare project ko Production mai bhejenge (Means Deploy krenge) tab agr jo port hamne bheja hai wo free nhi hua agle user ki machine mai tab fiir hamara wala 'PORT' override ho jaaega and jo bhi user port user ki machine mai free hoga wo port par ye backend chal jaaega

        ABB ye step krne ke baad Hamari Application hogyi hai `Production Ready` (Mtlb ki now we can Deploy it).

        To Deploy -> Pasie lagenge free shyd hee hai abb koi. but fiir bhi agr hamm dekhna chhate hai ki deploy kese hota hai too fiir video mai dekhlena Itna bhi koi rocket science nhi hai
        Some Hosting Plateforms to deploy our Backend Application : DigitalOcean , Heroku , etc.

        Main iss Video mai jo sabse important tha -> 'Environment Varibles ko smjna' tha baaki sab too bss normal hee tha i.e hamne express ki website sai code copy paste kiya hamari file mai and usme `request and response` smja bss
        


*************************** Video 3 (How to connect frontend and backend in javascript | Fullstack Proxy and CORS) ****************************

* npm install axios -> 'axios' ekk Library hai jo specailly likhi gayi 'Web Request' krne ke liye, Ki data kis tarag sai aa rha hai kya hoga agr data fail hogya too kya hoga data loading ho rha hai tab kya hoga everything.
 'axios' bhi fetch jesa hee hai but 'axios` kuch additional features and  functionalities deta hai hame.

 Note : Read 'axios' Documentation from => axios npm website. BOHOT jyada hee powerfull library hai weekly install bhi bohot jydaa hai iske so read jrur krna


* C O R S (Cross Origin) Error => CORS protects our Browser by providing a Security Layer.
                Example : Hamare ghar mai ham harr kisi ko Enter hone nhi dete hai.
                
                This error says ki hamara Origin different hai (i.e cross origin).
                Cross Origin Mtlb => Url ka POrt and Backend (i.e server) ka PORT dono different hai islie yeh error aaya hai.

                How to remove this CORS(Cross Origin) Error ? => Agr hamm chhahte hai ki hame yeh CORS error nhi dikhe `console screen` mai too Hamara `URL and PORT` dono Same ORIGIN PAR hone chahiye. SAME Origin Mtlb ? => Mtlb ki hamara URL(frontend mai jo bhi link ham search krr rhe hai) uska POrt and Hamara Backend (i.e server) ka `Port` dono same hone chahiye.

                To Do So we have Below Solutions....
        
        Solutions for Cors Error => 
                1. install 'cors' npm package and import in our frontend file. (install krne ke liye and iske baare mai jaane ke liye search on google : 'cors npm').
                
                2. backend mai 'whitelist' (i.e allow) krdo. Mtlb ki whitelist krte time batado ki mai kis-kisko allow krna chhata hu

                3. Follow a Structure for URL => hamm yeh solution approach use krr rhe hai
                        isme hamm sabse pehle too frontend ki 'App.jsx' file mai and backend ki 'index.js' file mai. '/api' laga denge
                        YE `/api` ekk Structure hamm folloe krr rhe hai. See below example

                       Example :
                        Frontend mai ese likha-> axios.get('/api/jokes')
                        Backend mai ese likha ->  app.get('/api/jokes' , (req , res) => {

                        Abb yeh likhne ke baad Hamare Pass Error aayi -> 404 Not Found.

                * Error 404 not found => Maanliya frontend and backend dono ekk hee structure follow krr rhe hai but hamane backend ko kese pata ki yeh jo request aa rhi hai yeh muje accept krni hai ya nhi.
                Too ISKE liye we Have Concept of `P R O X Y`.

                * P R O X Y -> hamm frontend mai `vite.config.js` file mai jaaenge and add a proxy there.
                                Like this : 
                                server: {
                                        proxy: {
                                        '/api': 'http://localhost:3000',
                                        },
                                }, 

                                Abb Yeh krne sai kya hua ki jab bhi ham yeh Structure use krenge backend(server) sai kuch lene ke liye tab hamare frontend ki url request mai `api` mai piche sai yeh "proxy" append ho jaaega. abb backend ke pass jese hee request aayi too backend ne dekha ki yeh bhi same structure follow krr rha hai jo mai follow krr rha hu i.e '/api' wala. and isko backend verify krta hai ki iss request ke api ke andar bhi same PORT aa rha hai jo ki mai use krr rha hu. TOo fiir yeh 404 error ko resolve krdega

                    TO read about Proxy : Search on google -> Proxy react (agr hamm react sai application bana rhe hai toh) 
                                          Search on google ->  Proxy vite (agr hamm vite sai application bana rhe hai toh)  



                * Bad Practices that is followed by some companies : 
                        Log kya krte hai ki frontend folder mai `build` (npm run build) command chala dete hai and iss command sai ekk `dist` name sai folder bann jaata hai jisme saara frontend ka code jo bhi apn ne likha hota hai wo pada hota hai. but ye dist folder "Static Folder" hai kyoki abb jab bhi hamm frontend ke code mai change krenge too iss `dist` folder mai too change hoga nhi agr hamm changes chahte hai too hame iss old dist ko delete krke new `dist` folder banana padega by using `npm run build` command. abb iss `dist` folder ko yeh yaha sai backend ke folder mai move krwa dete hai Then backend mai `Middleware` (read about middlewares on google agar chaho tohh hee nhi too apn baadme pdh lenge aage) add krdete hai ki muje yeh wala static 'dist` folder sai hee frontend chahiye. abb esa krne sai hamne frontend and backend sab ekk hee jagah sai le liya hai and isse hamari cost wagara bhi save hogyi hai ki hame frontend sai kuch bhi lene jana hee nhi hai jese hee hamara server start hoga then ussike saath hee hamara frontend bhi load ho jaaega but NOTE : yeh wala frontend static hai . agr hamne original frontend file mai kuch bhi changes kiye toh hamare server par jo frontend hai usme koi bhi changes nhi honge kyoki hamne too static wali frontend ko load krwaya hai. or Agr hamm chhate hai ki changes bhi load ho too again mai vhi old process repeat krna pdega i.e old `dist` folder ko delete kro then fronten folder mai new dist folder banao then usko vha sai backend ke folder mai move kro..                                          



************************************ Video 5 (Data modeling for backend with Mongoose) ***********************************************************

* In this video we have learnt About Data Modeling/Object Modeling.

* Mongoose -> Tool used for Data Modeling / Object Modeling

* iss video mai too hamne 'StackBlitz' sai hamare data ki modeling kri hai

* data/object modeling -> ekk structure tyaar krna ki hamare database mai konsa data jaaega and kese jaaega

* Stackblitz => website hai jo bhi environment setup krdeti hai hamare liye chahe kiska bhi ho environment it will set. Mtlb ki hamre system mai chijo ko bina install kiye direct ham unhe use krr skte hai

* To do Data Modeling => 
                        We Always have to follow 3 Steps :

                        1. import mongoose from 'mongoose'; 

                        2. const subTodoSchema = new mongoose.Schema({} , {timestamps:true});  
                                // This upper line will create the Schema. here 'Schema' ekk function hai jisme 2 parameters aate hai. 1st parameter is necesaary KO ki ekk Object hota hai jisme ham hamare schema ko define krte hai and 2nd parameter is Optional, which is also an Object but iss object ke andar timestamps aata hai Mtlb ki user ne kis time par create kiya schema kis time par update kiya ye sab
                       
                        3. export const SubTodo = mongoose.model('SubTodo', subTodoSchema);

                        NOTE : step 3 ke andar '.model' naam ko jo hai wo ekk method hai jiske andar 2 parameters aate hai : 1st parameter ke andar aata hai ki `Database ke andar hamm iss Schema ka kya Name Dena Chahte hai` and 2nd Parameter is Ye jo bhi schema hamm database mai store krwana chahte hai ye `kiske (kis schema ke) base par store krwana chahte hai.

                        NOTE : step 3 ke andar try krna ki hamare Constant Variable ka naam and '.model' method ke 1st parameter ka naam (i.e name of our schema in database) same ho. Koshish yahi rkhna hamesha.

                        Note : hamm jab bhi reference dete hai kisi bhi schema ka kisi or schema ko tab reference ke andar jo schema ka ham reference name dena chahte hai wo hamesha '.model' method ke 1st parameter ka name hee dena hota hai (i.e name of our schema in database).

                        v.v.v.v.v.v.v Imp Interview NOTE => jab ham '.model' method ke andar hamare 1st parameter(i.e name of our Schema) jaata hai database mai too Database usko store kese krta hai ? => ANS : database Database mai uss Schema ka jo bhi name aaya hai usko `lowercase` mai convert krdega and usko plural banadega Mtlb ki uske saath 's' add krdega.

                                For Example : database mai Schema ka name `Todo` aaya : 
                                                                                -> then database mai it will converted and saved as 'todos'

                                Ex-2 : database mai Schema ka name 'SubTodo' aaya  -> then database mai it will converted and saved as `subtodos`

                                Ex-3 : 'categories' aaya too -> our database is very intelligent and usko dikh rha hai ki jo Schema ka name mere pass mai aaya hai wo `lowercase` mai hee hai and `plural` bhi hai. too isme database kuch bhi changes nhi krega.                                                  

                        -----> SEE code from `Stackblitz`




******************************** Video 6 (Ecommerce and Hospital management Data modelling) ********************************                       

 * enum => It means ki choices
        mtlb ki inhee choices mai sai choose krna hai and Mandatory chije hai ye sab chije jo iske andar likhi hue hai. ekk na ekk choice ko too choose krna hee hai.
        Jo values hoti hai wo ham enum ke andar dete hai. values mtlb ki Example: 'gender' hogya person ka yaa fiir We know ki Plane mai 3 types ki seats hee hoti hai too hamne kis type ki seat chahiye
        NOTE : `enum` ke anadar fields "Array" ke andar hee dii jaati hai

 See code from "Stackblitz"


 





 ************************************** Video 7 (How to setup a professional backend project) *****************************************************
 
 Project Setup Steps : 
                        1. make a separate folder for this project (Hamne Backend folder sai bahar banaya hai Project ka folder ekk dum separte folder) and run a command 'npm init'

                        npm init -> by this command node package manager will initialise a repository i.e it will create a `package.json` file

                        2. in root folder of this project (i.e megaProjectBackend folder mai) create a folder `public` and public folder create one more folder i.e `temp`

                        Now run git status command -> you will notice that git issko track nhi krr rha hai
                        Reason: git does not track empty folders unke andar files hoti hai too hee git track krta hai

                        To track Empty folder Solution ->  create a file in 'temp' folder i.e `.gitkeep`

                        .gitkeep -> empty file hee hai bss ye git ko batati hai ki jiske andar ye file padi hai uss folder ko bhi track krna hai

                        3. create '.gitignore' file in the root folder of this project

                        Now search for `gitignore` generators on google and choose any webiste and search for 'node'(kyoki hamm nodeJS use krr rhe hai) -> yeh hame nodejS ke liye generate krke de dega ki kya kya hame '.gitignore' file ke andar daalne hai i.e jinhe ignore krna hai. So copy kro uss website sai and paste it in '.gitignore' file